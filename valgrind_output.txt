==296== Memcheck, a memory error detector
==296== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==296== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==296== Command: ./ircserv 1212 1
==296== Parent PID: 295
==296== 
==296== Invalid read of size 8
==296==    at 0x10DA24: std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, IRC::Channel*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, IRC::Channel*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, IRC::Channel*> > >::begin() (stl_tree.h:961)
==296==    by 0x10D017: std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, IRC::Channel*, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, IRC::Channel*> > >::begin() (stl_map.h:349)
==296==    by 0x11702F: IRC::Client::removeClientFromAllChannels(int const&, IRC::Server*, IRC::Client*) (Client.cpp:80)
==296==    by 0x117117: IRC::Client::removeClientFromServer(int const&, IRC::Server*, IRC::Client*) (Client.cpp:94)
==296==    by 0x10C027: IRC::Server::multi_connection(IRC::ICommands*) (server.cpp:128)
==296==    by 0x10B35B: main (main.cpp:20)
==296==  Address 0x68 is not stack'd, malloc'd or (recently) free'd
==296== 
==296== 
==296== Process terminating with default action of signal 11 (SIGSEGV)
==296==  Access not within mapped region at address 0x68
==296==    at 0x10DA24: std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, IRC::Channel*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, IRC::Channel*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, IRC::Channel*> > >::begin() (stl_tree.h:961)
==296==    by 0x10D017: std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, IRC::Channel*, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, IRC::Channel*> > >::begin() (stl_map.h:349)
==296==    by 0x11702F: IRC::Client::removeClientFromAllChannels(int const&, IRC::Server*, IRC::Client*) (Client.cpp:80)
==296==    by 0x117117: IRC::Client::removeClientFromServer(int const&, IRC::Server*, IRC::Client*) (Client.cpp:94)
==296==    by 0x10C027: IRC::Server::multi_connection(IRC::ICommands*) (server.cpp:128)
==296==    by 0x10B35B: main (main.cpp:20)
==296==  If you believe this happened as a result of a stack
==296==  overflow in your program's main thread (unlikely but
==296==  possible), you can try to increase the size of the
==296==  main thread stack using the --main-stacksize= flag.
==296==  The main thread stack size used in this run was 8388608.
==296== 
==296== HEAP SUMMARY:
==296==     in use at exit: 1,812 bytes in 23 blocks
==296==   total heap usage: 31 allocs, 8 frees, 75,841 bytes allocated
==296== 
==296== LEAK SUMMARY:
==296==    definitely lost: 0 bytes in 0 blocks
==296==    indirectly lost: 0 bytes in 0 blocks
==296==      possibly lost: 0 bytes in 0 blocks
==296==    still reachable: 1,812 bytes in 23 blocks
==296==         suppressed: 0 bytes in 0 blocks
==296== Rerun with --leak-check=full to see details of leaked memory
==296== 
==296== For counts of detected and suppressed errors, rerun with: -v
==296== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
